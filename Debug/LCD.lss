
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003c6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000041a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000041a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000044c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  00000488  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f30  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000790  00000000  00000000  00001470  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006e7  00000000  00000000  00001c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000198  00000000  00000000  000022e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000415  00000000  00000000  00002480  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000091c  00000000  00000000  00002895  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  000031b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 db 01 	call	0x3b6	; 0x3b6 <main>
  64:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <LCD_WriteCommand>:
	
	#endif
}

void LCD_WriteCommand(uint8 cmd)
{
  6c:	cf 93       	push	r28
  6e:	c8 2f       	mov	r28, r24
	
	_delay_ms(5);
	
	#elif LCD_MODE == 4  
	
	DIO_WritePin( DIO_PORTB ,LCD_RW_PIN, DIO_PIN_LOW);
  70:	40 e0       	ldi	r20, 0x00	; 0
  72:	62 e0       	ldi	r22, 0x02	; 2
  74:	81 e0       	ldi	r24, 0x01	; 1
  76:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
	DIO_WritePin( DIO_PORTB ,LCD_RS_PIN, DIO_PIN_LOW);
  7a:	40 e0       	ldi	r20, 0x00	; 0
  7c:	61 e0       	ldi	r22, 0x01	; 1
  7e:	81 e0       	ldi	r24, 0x01	; 1
  80:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
	DIO_WritePin( DIO_PORTB ,LCD_E_PIN, DIO_PIN_LOW);
  84:	40 e0       	ldi	r20, 0x00	; 0
  86:	63 e0       	ldi	r22, 0x03	; 3
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
	
	
	PORTA = (cmd & 0xF0);
  8e:	8c 2f       	mov	r24, r28
  90:	80 7f       	andi	r24, 0xF0	; 240
  92:	8b bb       	out	0x1b, r24	; 27
	
	DIO_WritePin( PORTB ,LCD_E_PIN, DIO_PORT_HIGH);
  94:	88 b3       	in	r24, 0x18	; 24
  96:	4f ef       	ldi	r20, 0xFF	; 255
  98:	63 e0       	ldi	r22, 0x03	; 3
  9a:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9e:	89 ef       	ldi	r24, 0xF9	; 249
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	01 97       	sbiw	r24, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <LCD_WriteCommand+0x36>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <LCD_WriteCommand+0x3c>
  a8:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin( PORTB ,LCD_E_PIN, DIO_PIN_LOW);
  aa:	88 b3       	in	r24, 0x18	; 24
  ac:	40 e0       	ldi	r20, 0x00	; 0
  ae:	63 e0       	ldi	r22, 0x03	; 3
  b0:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
	
	PORTA = (cmd << 4);
  b4:	c2 95       	swap	r28
  b6:	c0 7f       	andi	r28, 0xF0	; 240
  b8:	cb bb       	out	0x1b, r28	; 27
		
	DIO_WritePin( PORTB ,LCD_E_PIN, DIO_PORT_HIGH);
  ba:	88 b3       	in	r24, 0x18	; 24
  bc:	4f ef       	ldi	r20, 0xFF	; 255
  be:	63 e0       	ldi	r22, 0x03	; 3
  c0:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
  c4:	89 ef       	ldi	r24, 0xF9	; 249
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <LCD_WriteCommand+0x5c>
  cc:	00 c0       	rjmp	.+0      	; 0xce <LCD_WriteCommand+0x62>
  ce:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin( PORTB ,LCD_E_PIN, DIO_PIN_LOW);
  d0:	88 b3       	in	r24, 0x18	; 24
  d2:	40 e0       	ldi	r20, 0x00	; 0
  d4:	63 e0       	ldi	r22, 0x03	; 3
  d6:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
  da:	81 ee       	ldi	r24, 0xE1	; 225
  dc:	94 e0       	ldi	r25, 0x04	; 4
  de:	01 97       	sbiw	r24, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <LCD_WriteCommand+0x72>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <LCD_WriteCommand+0x78>
  e4:	00 00       	nop
	_delay_ms(5);
	
	
	#endif
	
}
  e6:	cf 91       	pop	r28
  e8:	08 95       	ret

000000ea <LCD_Init>:
	
	
	
	#elif LCD_MODE == 4
	
	DIO_SetPinDir(DIO_PORTB ,LCD_RS_PIN , DIO_PIN_OUTPUT);
  ea:	41 e0       	ldi	r20, 0x01	; 1
  ec:	61 e0       	ldi	r22, 0x01	; 1
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <DIO_SetPinDir>
	DIO_SetPinDir(DIO_PORTB ,LCD_RW_PIN , DIO_PIN_OUTPUT);
  f4:	41 e0       	ldi	r20, 0x01	; 1
  f6:	62 e0       	ldi	r22, 0x02	; 2
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <DIO_SetPinDir>
	DIO_SetPinDir(DIO_PORTB ,LCD_E_PIN ,  DIO_PIN_OUTPUT);
  fe:	41 e0       	ldi	r20, 0x01	; 1
 100:	63 e0       	ldi	r22, 0x03	; 3
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <DIO_SetPinDir>
	
	DIO_SetPinDir(DIO_PORTA ,LCD_D4_PIN , DIO_PIN_OUTPUT);
 108:	41 e0       	ldi	r20, 0x01	; 1
 10a:	64 e0       	ldi	r22, 0x04	; 4
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <DIO_SetPinDir>
	DIO_SetPinDir(DIO_PORTA ,LCD_D5_PIN , DIO_PIN_OUTPUT);
 112:	41 e0       	ldi	r20, 0x01	; 1
 114:	65 e0       	ldi	r22, 0x05	; 5
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <DIO_SetPinDir>
	DIO_SetPinDir(DIO_PORTA ,LCD_D6_PIN , DIO_PIN_OUTPUT);
 11c:	41 e0       	ldi	r20, 0x01	; 1
 11e:	66 e0       	ldi	r22, 0x06	; 6
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <DIO_SetPinDir>
	DIO_SetPinDir(DIO_PORTA ,LCD_D7_PIN , DIO_PIN_OUTPUT);
 126:	41 e0       	ldi	r20, 0x01	; 1
 128:	67 e0       	ldi	r22, 0x07	; 7
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <DIO_SetPinDir>
 130:	87 ea       	ldi	r24, 0xA7	; 167
 132:	91 e6       	ldi	r25, 0x61	; 97
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <LCD_Init+0x4a>
 138:	00 c0       	rjmp	.+0      	; 0x13a <LCD_Init+0x50>
 13a:	00 00       	nop
	
	_delay_ms(100);
	
	
	LCD_WriteCommand(0x33);
 13c:	83 e3       	ldi	r24, 0x33	; 51
 13e:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_WriteCommand>
	LCD_WriteCommand(0x32);
 142:	82 e3       	ldi	r24, 0x32	; 50
 144:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_WriteCommand>
	LCD_WriteCommand(0x28);
 148:	88 e2       	ldi	r24, 0x28	; 40
 14a:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_WriteCommand>
	
	LCD_WriteCommand(0x0C);
 14e:	8c e0       	ldi	r24, 0x0C	; 12
 150:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_WriteCommand>
	LCD_WriteCommand(0x01);
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_WriteCommand>
	
	LCD_WriteCommand(0x06);
 15a:	86 e0       	ldi	r24, 0x06	; 6
 15c:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_WriteCommand>
	LCD_WriteCommand(0x02);
 160:	82 e0       	ldi	r24, 0x02	; 2
 162:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_WriteCommand>
 166:	81 ee       	ldi	r24, 0xE1	; 225
 168:	94 e0       	ldi	r25, 0x04	; 4
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <LCD_Init+0x80>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <LCD_Init+0x86>
 170:	00 00       	nop
 172:	08 95       	ret

00000174 <LCD_WriteChar>:
	#endif
	
}

void LCD_WriteChar(uint8 chr)
{
 174:	cf 93       	push	r28
 176:	c8 2f       	mov	r28, r24
	
	_delay_ms(5);

	#elif LCD_MODE == 4   

	DIO_WritePin( DIO_PORTB ,LCD_RW_PIN, DIO_PIN_LOW);
 178:	40 e0       	ldi	r20, 0x00	; 0
 17a:	62 e0       	ldi	r22, 0x02	; 2
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
	DIO_WritePin( DIO_PORTB ,LCD_RS_PIN, DIO_PIN_HIGH);
 182:	41 e0       	ldi	r20, 0x01	; 1
 184:	61 e0       	ldi	r22, 0x01	; 1
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
	DIO_WritePin( DIO_PORTB ,LCD_E_PIN, DIO_PIN_LOW);
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	63 e0       	ldi	r22, 0x03	; 3
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
	
	
	PORTA = (chr & 0xF0);
 196:	8c 2f       	mov	r24, r28
 198:	80 7f       	andi	r24, 0xF0	; 240
 19a:	8b bb       	out	0x1b, r24	; 27
	
	DIO_WritePin( DIO_PORTB ,LCD_E_PIN, DIO_PORT_HIGH);
 19c:	4f ef       	ldi	r20, 0xFF	; 255
 19e:	63 e0       	ldi	r22, 0x03	; 3
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
 1a6:	89 ef       	ldi	r24, 0xF9	; 249
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <LCD_WriteChar+0x36>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <LCD_WriteChar+0x3c>
 1b0:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin( DIO_PORTB ,LCD_E_PIN, DIO_PIN_LOW);
 1b2:	40 e0       	ldi	r20, 0x00	; 0
 1b4:	63 e0       	ldi	r22, 0x03	; 3
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
	
	PORTA = (chr << 4);
 1bc:	c2 95       	swap	r28
 1be:	c0 7f       	andi	r28, 0xF0	; 240
 1c0:	cb bb       	out	0x1b, r28	; 27
	
	DIO_WritePin( DIO_PORTB ,LCD_E_PIN, DIO_PORT_HIGH);
 1c2:	4f ef       	ldi	r20, 0xFF	; 255
 1c4:	63 e0       	ldi	r22, 0x03	; 3
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
 1cc:	89 ef       	ldi	r24, 0xF9	; 249
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <LCD_WriteChar+0x5c>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <LCD_WriteChar+0x62>
 1d6:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin( DIO_PORTB ,LCD_E_PIN, DIO_PIN_LOW);
 1d8:	40 e0       	ldi	r20, 0x00	; 0
 1da:	63 e0       	ldi	r22, 0x03	; 3
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <DIO_WritePin>
 1e2:	81 ee       	ldi	r24, 0xE1	; 225
 1e4:	94 e0       	ldi	r25, 0x04	; 4
 1e6:	01 97       	sbiw	r24, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <LCD_WriteChar+0x72>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <LCD_WriteChar+0x78>
 1ec:	00 00       	nop
	
	_delay_ms(5);
	
	
	#endif
}
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <DIO_SetPinDir>:

		break;

	case DIO_PORTD :

		PORTD = Val;
 1f2:	44 23       	and	r20, r20
 1f4:	b9 f1       	breq	.+110    	; 0x264 <DIO_SetPinDir+0x72>
 1f6:	41 30       	cpi	r20, 0x01	; 1
 1f8:	09 f0       	breq	.+2      	; 0x1fc <DIO_SetPinDir+0xa>
 1fa:	6b c0       	rjmp	.+214    	; 0x2d2 <DIO_SetPinDir+0xe0>
 1fc:	81 30       	cpi	r24, 0x01	; 1
 1fe:	89 f0       	breq	.+34     	; 0x222 <DIO_SetPinDir+0x30>
 200:	28 f0       	brcs	.+10     	; 0x20c <DIO_SetPinDir+0x1a>
 202:	82 30       	cpi	r24, 0x02	; 2
 204:	c9 f0       	breq	.+50     	; 0x238 <DIO_SetPinDir+0x46>
 206:	83 30       	cpi	r24, 0x03	; 3
 208:	11 f1       	breq	.+68     	; 0x24e <DIO_SetPinDir+0x5c>
 20a:	08 95       	ret
 20c:	2a b3       	in	r18, 0x1a	; 26
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_SetPinDir+0x26>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	6a 95       	dec	r22
 21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_SetPinDir+0x22>
 21c:	82 2b       	or	r24, r18
 21e:	8a bb       	out	0x1a, r24	; 26
 220:	08 95       	ret
 222:	27 b3       	in	r18, 0x17	; 23
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_SetPinDir+0x3c>
 22a:	88 0f       	add	r24, r24
 22c:	99 1f       	adc	r25, r25
 22e:	6a 95       	dec	r22
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_SetPinDir+0x38>
 232:	82 2b       	or	r24, r18
 234:	87 bb       	out	0x17, r24	; 23
 236:	08 95       	ret
 238:	24 b3       	in	r18, 0x14	; 20
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <DIO_SetPinDir+0x52>
 240:	88 0f       	add	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	6a 95       	dec	r22
 246:	e2 f7       	brpl	.-8      	; 0x240 <DIO_SetPinDir+0x4e>
 248:	82 2b       	or	r24, r18
 24a:	84 bb       	out	0x14, r24	; 20
 24c:	08 95       	ret
 24e:	21 b3       	in	r18, 0x11	; 17
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	02 c0       	rjmp	.+4      	; 0x25a <DIO_SetPinDir+0x68>
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	6a 95       	dec	r22
 25c:	e2 f7       	brpl	.-8      	; 0x256 <DIO_SetPinDir+0x64>
 25e:	82 2b       	or	r24, r18
 260:	81 bb       	out	0x11, r24	; 17
 262:	08 95       	ret
 264:	81 30       	cpi	r24, 0x01	; 1
 266:	91 f0       	breq	.+36     	; 0x28c <DIO_SetPinDir+0x9a>
 268:	28 f0       	brcs	.+10     	; 0x274 <DIO_SetPinDir+0x82>
 26a:	82 30       	cpi	r24, 0x02	; 2
 26c:	d9 f0       	breq	.+54     	; 0x2a4 <DIO_SetPinDir+0xb2>
 26e:	83 30       	cpi	r24, 0x03	; 3
 270:	29 f1       	breq	.+74     	; 0x2bc <DIO_SetPinDir+0xca>
 272:	08 95       	ret
 274:	2a b3       	in	r18, 0x1a	; 26
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	02 c0       	rjmp	.+4      	; 0x280 <DIO_SetPinDir+0x8e>
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	6a 95       	dec	r22
 282:	e2 f7       	brpl	.-8      	; 0x27c <DIO_SetPinDir+0x8a>
 284:	80 95       	com	r24
 286:	82 23       	and	r24, r18
 288:	8a bb       	out	0x1a, r24	; 26
 28a:	08 95       	ret
 28c:	27 b3       	in	r18, 0x17	; 23
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	02 c0       	rjmp	.+4      	; 0x298 <DIO_SetPinDir+0xa6>
 294:	88 0f       	add	r24, r24
 296:	99 1f       	adc	r25, r25
 298:	6a 95       	dec	r22
 29a:	e2 f7       	brpl	.-8      	; 0x294 <DIO_SetPinDir+0xa2>
 29c:	80 95       	com	r24
 29e:	82 23       	and	r24, r18
 2a0:	87 bb       	out	0x17, r24	; 23
 2a2:	08 95       	ret
 2a4:	24 b3       	in	r18, 0x14	; 20
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <DIO_SetPinDir+0xbe>
 2ac:	88 0f       	add	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	6a 95       	dec	r22
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <DIO_SetPinDir+0xba>
 2b4:	80 95       	com	r24
 2b6:	82 23       	and	r24, r18
 2b8:	84 bb       	out	0x14, r24	; 20
 2ba:	08 95       	ret
 2bc:	21 b3       	in	r18, 0x11	; 17
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_SetPinDir+0xd6>
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	6a 95       	dec	r22
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_SetPinDir+0xd2>
 2cc:	80 95       	com	r24
 2ce:	82 23       	and	r24, r18
 2d0:	81 bb       	out	0x11, r24	; 17
 2d2:	08 95       	ret

000002d4 <DIO_WritePin>:



void DIO_WritePin(uint8 Port ,uint8 Pin, uint8 Val)
{
	switch (Val)
 2d4:	44 23       	and	r20, r20
 2d6:	b9 f1       	breq	.+110    	; 0x346 <DIO_WritePin+0x72>
 2d8:	41 30       	cpi	r20, 0x01	; 1
 2da:	09 f0       	breq	.+2      	; 0x2de <DIO_WritePin+0xa>
 2dc:	6b c0       	rjmp	.+214    	; 0x3b4 <DIO_WritePin+0xe0>


	case DIO_PIN_HIGH :


		switch (Port)
 2de:	81 30       	cpi	r24, 0x01	; 1
 2e0:	89 f0       	breq	.+34     	; 0x304 <DIO_WritePin+0x30>
 2e2:	28 f0       	brcs	.+10     	; 0x2ee <DIO_WritePin+0x1a>
 2e4:	82 30       	cpi	r24, 0x02	; 2
 2e6:	c9 f0       	breq	.+50     	; 0x31a <DIO_WritePin+0x46>
 2e8:	83 30       	cpi	r24, 0x03	; 3
 2ea:	11 f1       	breq	.+68     	; 0x330 <DIO_WritePin+0x5c>
 2ec:	08 95       	ret
		{
		case DIO_PORTA :

			SET_BIT(PORTA,Pin);
 2ee:	2b b3       	in	r18, 0x1b	; 27
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <DIO_WritePin+0x26>
 2f6:	88 0f       	add	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	6a 95       	dec	r22
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <DIO_WritePin+0x22>
 2fe:	82 2b       	or	r24, r18
 300:	8b bb       	out	0x1b, r24	; 27

			break;
 302:	08 95       	ret

		case DIO_PORTB :

			SET_BIT(PORTB,Pin);
 304:	28 b3       	in	r18, 0x18	; 24
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	02 c0       	rjmp	.+4      	; 0x310 <DIO_WritePin+0x3c>
 30c:	88 0f       	add	r24, r24
 30e:	99 1f       	adc	r25, r25
 310:	6a 95       	dec	r22
 312:	e2 f7       	brpl	.-8      	; 0x30c <DIO_WritePin+0x38>
 314:	82 2b       	or	r24, r18
 316:	88 bb       	out	0x18, r24	; 24

			break;
 318:	08 95       	ret

		case DIO_PORTC :

			SET_BIT(PORTC,Pin);
 31a:	25 b3       	in	r18, 0x15	; 21
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	02 c0       	rjmp	.+4      	; 0x326 <DIO_WritePin+0x52>
 322:	88 0f       	add	r24, r24
 324:	99 1f       	adc	r25, r25
 326:	6a 95       	dec	r22
 328:	e2 f7       	brpl	.-8      	; 0x322 <DIO_WritePin+0x4e>
 32a:	82 2b       	or	r24, r18
 32c:	85 bb       	out	0x15, r24	; 21

			break;
 32e:	08 95       	ret

		case DIO_PORTD :

			SET_BIT(PORTD,Pin);
 330:	22 b3       	in	r18, 0x12	; 18
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	02 c0       	rjmp	.+4      	; 0x33c <DIO_WritePin+0x68>
 338:	88 0f       	add	r24, r24
 33a:	99 1f       	adc	r25, r25
 33c:	6a 95       	dec	r22
 33e:	e2 f7       	brpl	.-8      	; 0x338 <DIO_WritePin+0x64>
 340:	82 2b       	or	r24, r18
 342:	82 bb       	out	0x12, r24	; 18

			break;
 344:	08 95       	ret
		break;

		case DIO_PIN_LOW :


			switch (Port)
 346:	81 30       	cpi	r24, 0x01	; 1
 348:	91 f0       	breq	.+36     	; 0x36e <DIO_WritePin+0x9a>
 34a:	28 f0       	brcs	.+10     	; 0x356 <DIO_WritePin+0x82>
 34c:	82 30       	cpi	r24, 0x02	; 2
 34e:	d9 f0       	breq	.+54     	; 0x386 <DIO_WritePin+0xb2>
 350:	83 30       	cpi	r24, 0x03	; 3
 352:	29 f1       	breq	.+74     	; 0x39e <DIO_WritePin+0xca>
 354:	08 95       	ret
			{
			case DIO_PORTA :

				CLR_BIT(PORTA,Pin);
 356:	2b b3       	in	r18, 0x1b	; 27
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	02 c0       	rjmp	.+4      	; 0x362 <DIO_WritePin+0x8e>
 35e:	88 0f       	add	r24, r24
 360:	99 1f       	adc	r25, r25
 362:	6a 95       	dec	r22
 364:	e2 f7       	brpl	.-8      	; 0x35e <DIO_WritePin+0x8a>
 366:	80 95       	com	r24
 368:	82 23       	and	r24, r18
 36a:	8b bb       	out	0x1b, r24	; 27

				break;
 36c:	08 95       	ret

			case DIO_PORTB :

				CLR_BIT(PORTB,Pin);
 36e:	28 b3       	in	r18, 0x18	; 24
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	90 e0       	ldi	r25, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <DIO_WritePin+0xa6>
 376:	88 0f       	add	r24, r24
 378:	99 1f       	adc	r25, r25
 37a:	6a 95       	dec	r22
 37c:	e2 f7       	brpl	.-8      	; 0x376 <DIO_WritePin+0xa2>
 37e:	80 95       	com	r24
 380:	82 23       	and	r24, r18
 382:	88 bb       	out	0x18, r24	; 24

				break;
 384:	08 95       	ret

			case DIO_PORTC :

				CLR_BIT(PORTC,Pin);
 386:	25 b3       	in	r18, 0x15	; 21
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	02 c0       	rjmp	.+4      	; 0x392 <DIO_WritePin+0xbe>
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	6a 95       	dec	r22
 394:	e2 f7       	brpl	.-8      	; 0x38e <DIO_WritePin+0xba>
 396:	80 95       	com	r24
 398:	82 23       	and	r24, r18
 39a:	85 bb       	out	0x15, r24	; 21

				break;
 39c:	08 95       	ret

			case DIO_PORTD :

				CLR_BIT(PORTD,Pin);
 39e:	22 b3       	in	r18, 0x12	; 18
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <DIO_WritePin+0xd6>
 3a6:	88 0f       	add	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	6a 95       	dec	r22
 3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <DIO_WritePin+0xd2>
 3ae:	80 95       	com	r24
 3b0:	82 23       	and	r24, r18
 3b2:	82 bb       	out	0x12, r24	; 18
 3b4:	08 95       	ret

000003b6 <main>:


int main(void)
{
   
   LCD_Init();
 3b6:	0e 94 75 00 	call	0xea	; 0xea <LCD_Init>
   
   LCD_WriteChar('A');
 3ba:	81 e4       	ldi	r24, 0x41	; 65
 3bc:	0e 94 ba 00 	call	0x174	; 0x174 <LCD_WriteChar>
 3c0:	ff cf       	rjmp	.-2      	; 0x3c0 <main+0xa>

000003c2 <_exit>:
 3c2:	f8 94       	cli

000003c4 <__stop_program>:
 3c4:	ff cf       	rjmp	.-2      	; 0x3c4 <__stop_program>
